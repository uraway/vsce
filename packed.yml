commands:
  configure-git:
    description: |
      Sets mandatory git config fields to allow creating and pushing of tags.
    steps:
    - run:
        command: |
          git config --global user.name "$CIRCLE_USERNAME"
          git config --global user.email "$CIRCLE_USERNAME@users.noreply.github.com"
        name: git config
  publish:
    description: |
      Publish extension to VS Code Extension Marketplace
    parameters:
      post-install-steps:
        default: []
        description: |
          Steps which are executed after installation of node_modules. Use save_cache here.
        type: steps
      pre-install-steps:
        default: []
        description: |
          Steps which are executed before installation of node_modules. Use restore_cache here.
        type: steps
      prefer-yarn:
        default: false
        description: |
          Use yarn instead of npm
        type: boolean
      publish-token-variable:
        default: VSCODE_MARKETPLACE_TOKEN
        description: |
          Name of environment variable containing your VSCODE_MARKETPLACE_TOKEN token.
          View detail: https://code.visualstudio.com/api/working-with-extensions/publishing-extension#get-a-personal-access-token
        type: env_var_name
    steps:
    - steps: << parameters.pre-install-steps >>
    - when:
        condition: << parameters.prefer-yarn >>
        steps:
        - run: yarn install
    - unless:
        condition: << parameters.prefer-yarn >>
        steps:
        - run: npm install
    - steps: << parameters.post-install-steps >>
    - run:
        command: |
          npx vsce publish <<# parameters.prefer-yarn >>--yarn<</ parameters.prefer-yarn >> -p $<< parameters.publish-token-variable >>
        name: Publish your extension
  push-git-tag:
    description: |
      Push git tag to your repository
    parameters:
      extension-id:
        default: ""
        description: |
          Extension ID of your extension. Always ${publisher}.${name}
          Check manifest: https://code.visualstudio.com/api/references/extension-manifest
        type: string
    steps:
    - run:
        command: sudo apt-get install jq
        name: Install jq
    - when:
        condition: <<parameters.extension-id>>
        steps:
        - run: echo 'EXTENSION_ID=<<parameters.extension-id>>' >> $BASH_ENV
    - unless:
        condition: <<parameters.extension-id>>
        steps:
        - run: |
            PUBLISHER=$(cat package.json | jq -r '.publisher')
            NAME=${cat package.json | jq -r '.name'}
            echo 'EXTENSION_ID=$PUBLISHER.$NAME' >> $BASH_ENV
    - run:
        command: |
          TAG=$(npx vsce show << parameters.extension-id >> --json | jq -r '.versions[0].version')
          git tag -a "v$TAG" -m "View CHANGELOG: https://marketplace.visualstudio.com/items/<< parameters.extension-id >>/changelog"
          git push origin "v$TAG"
        name: Publish your extension
description: |
  Orb for publishing VS Code Extension.
  source code: https://github.com/uraway/vsce
examples:
  test-lint-publish:
    usage:
      jobs:
        test:
          executor: vsce/node-browsers
          steps:
          - run: npm test
      orbs:
        vsce: circleci/vsce@x.y.z
      version: 2.1
      workflows:
        lint-test-publish:
          jobs:
          - test
          - vsce/publish:
              filters:
                branches:
                  only: master
              requires:
              - vsce/test
executors:
  node:
    description: |
      CircleCI Node Docker image
    docker:
    - image: circleci/node:<<parameters.tag>>
    parameters:
      resource-class:
        default: small
        enum:
        - small
        - medium
        - medium+
        - large
        - xlarge
        type: enum
      tag:
        default: latest
        type: string
    resource_class: <<parameters.resource-class>>
  node-browsers:
    description: |
      CircleCI Node with chromedriver Docker image
    docker:
    - image: circleci/node:<<parameters.tag>>-browsers
    parameters:
      resource-class:
        default: small
        enum:
        - small
        - medium
        - medium+
        - large
        - xlarge
        type: enum
      tag:
        default: latest
        type: string
    resource_class: <<parameters.resource-class>>
jobs:
  publish:
    description: |
      Publish VS Code Extension
    executor: node
    parameters:
      extension-id:
        default: ""
        description: |
          Extension ID of your extension. Always ${publisher}.${name}
          Check manifest: https://code.visualstudio.com/api/references/extension-manifest
        type: string
      package-path:
        default: .
        description: |
          Which directory to publish
        type: string
      post-install-steps:
        default: []
        description: |
          Steps which are executed after installation of node_modules. Use save_cache here.
        type: steps
      pre-install-steps:
        default: []
        description: |
          Steps which are executed before installation of node_modules. Use restore_cache here.
        type: steps
      prefer-yarn:
        default: false
        description: |
          Use yarn instead of npm
        type: boolean
      publish-token-variable:
        default: VSCODE_MARKETPLACE_TOKEN
        description: |
          Name of environment variable containing your VSCODE_MARKETPLACE_TOKEN token.
          View detail: https://code.visualstudio.com/api/working-with-extensions/publishing-extension#get-a-personal-access-token
        type: env_var_name
      push-git-tag:
        default: true
        description: |
          Whether or not to push git tag to your repository. Default to true
        type: boolean
      ssh-fingerprints:
        default: ""
        description: |
          Fingerprints for SSH deploy key (add the public key as a read/write key on GitHub; add the private key in CircleCI via SSH Permissions, with github.com as Hostname). Used to push a git tag back to the project's repository.
        type: string
    steps:
    - checkout
    - publish:
        post-install-steps: << parameters.post-install-steps >>
        pre-install-steps: << parameters.pre-install-steps >>
        prefer-yarn: << parameters.prefer-yarn >>
        publish-token-variable: << parameters.publish-token-variable >>
        working_directory: << parameters.package-path >>
    - when:
        condition: << parameters.push-git-tag >>
        steps:
        - add_ssh_keys:
            fingerprints:
            - <<parameters.ssh-fingerprints>>
        - configure-git
        - push-git-tag:
            extension-id: << parameters.extension-id >>
version: 2.1

